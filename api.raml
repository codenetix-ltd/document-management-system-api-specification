#%RAML 1.0

title: DMS API
version: v1
baseUri: https://mocksvc.mulesoft.com/mocks/8dfe53b2-3d8b-4567-9bb3-47803f7d9d47/{version} # baseUri: http://dms.codenetix.com/{version}

types: !include allDataTypes.raml

resourceTypes:
  PaginateCollection: !include resourceTypes/paginateCollection.raml
  PaginationCollection: !include resourceTypes/paginationCollection.raml
  Collection: !include resourceTypes/collection.raml
  Item: !include resourceTypes/item.raml

/users:
  type:
    PaginateCollection:
      responseItem: User
      postRequestItem: UserPostRequest
      examplesJson: !include examples/Users.json
  /current:
    type:
      Item:
        responseItem: User
        putRequestItem: UserPutRequest
  /{id}:
    uriParameters:
      id:
        type: integer
        example: 1
        default: 1
    type:
      Item:
        responseItem: User
        putRequestItem: UserPutRequest

/templates:
  type:
    PaginateCollection:
      responseItem: Template
      postRequestItem: TemplateRequest
      examplesJson: !include examples/Templates.json
  /{id}:
    uriParameters:
      id:
        type: integer
        example: 1
        default: 1
    type:
      Item:
        responseItem: Template
        putRequestItem: TemplateRequest
    /attributes:
      type:
        PaginateCollection:
          responseItem: Attribute
          postRequestItem: AttributeRequest
          examplesJson: !include examples/Attributes.json
      /{attributeId}:
        uriParameters:
          attributeId:
            type: integer
            example: 1
            default: 1
        type:
          Item:
            responseItem: Attribute
            putRequestItem: AttributeRequest
/comments/{commentId}/children:
  uriParameters:
    commentId:
      type: integer
      example: 1
      default: 1
  type:
    PaginationCollection:
      responseItem: Comment
      examplesJson: !include examples/Childrens.json

/documents:
  type:
    PaginateCollection:
      responseItem: Document
      postRequestItem: DocumentPostRequest
      examplesJson: !include examples/Documents.json
  get:
    queryParameters:
      filters[name]?:
        type: string
        example: match
      filters[id]?:
        type: integer
        example: 1
      filters[ids]?:
        type: string
        example: 1,2,3
      filters[ownerId]?:
        type: integer
        example: 1
      filters[templateIds]?:
        type: string
        example: 1,2,3
      filters[labelIds]?:
        type: string
        example: 1,2,3
      filters[archived]?:
        type: boolean
        example: true
      filters[createdAt.from]?:
        type: integer
        example: 1527231850
      filters[createdAt.to]?:
        type: integer
        example: 1527231850
      filters[updatedAt.from]?:
        type: integer
        example: 1527231850
      filters[updatedAt.to]?:
        type: integer
        example: 1527231850
  delete:
    queryParameters:
      ids:
        description: Delete selected elements
        type: string
        example: 1,2
        default: 1,2
    responses:
      204:
        description: Deleted
  patch:
    queryParameters:
      ids:
        description: Update selected elements
        type: string
        default: 1,2
        example: 1,2
    body:
      application/json:
        type: object[] #raml mock can't work with array of concrete object in request
        example: !include examples/DocumentPatchRequests.json
    responses:
      200:
        description: Updated
        body:
          application/json:
            type: Document[]
            example: !include examples/Documents.json
  /{id}:
    uriParameters:
      id:
        type: integer
        example: 1
        default: 1
    type:
      Item:
        responseItem: Document
        putRequestItem: DocumentPutRequest
    patch:
      queryParameters:
        with?:
          description: Expand embeded entityes
          type: string
          example: user,type
      body:
        application/json:
          DocumentPatchRequest
      responses:
        200:
          description:
            Updated item
          body:
            application/json:
              Document
    /actualVersion:
      post:
        body:
          application/json:
            type: DocumentSetActualVersionRequest
        responses:
          200:
            description:
              Success
            body:
              application/json:
                Document

    /comments:
      type:
        PaginateCollection:
          responseItem: Comment
          postRequestItem: Comment
          examplesJson: !include examples/CommentsTree.json

      /{commentId}:
        uriParameters:
          commentId:
            description: Ð¡omment identification number
            type: integer
            example: 123
            default: 1
        type:
          Item:
            responseItem: Comment
            putRequestItem: Comment
      /tree:
        type:
          PaginationCollection:
            responseItem: Comment
            examplesJson: !include examples/Tree.json
      /list:
        type:
          PaginationCollection:
            responseItem: Comment
            examplesJson: !include examples/CommentsList.json

/documents/{id}/versions:
  uriParameters:
    id:
      type: integer
      example: 1
      default: 1
  type:
    PaginateCollection:
      responseItem: DocumentVersion
      postRequestItem: DocumentVersionRequest
      examplesJson: !include examples/DocumentVersions.json
  /{versionId}:
    uriParameters:
      versionId:
        type: integer
        example: 1
        default: 1
    type:
      Item:
        responseItem: DocumentVersion
        putRequestItem: DocumentVersionRequest

/types:
  type:
    Collection:
      responseItem: Type
      examplesJson: !include examples/Types.json

/labels:
  type:
    PaginateCollection:
      responseItem: Label
      postRequestItem: LabelRequest
      examplesJson: !include examples/Labels.json
  /{id}:
    uriParameters:
      id:
        type: integer
        example: 1
        default: 1
    type:
      Item:
        responseItem: Label
        putRequestItem: LabelRequest

/roles:
  type:
    PaginateCollection:
      responseItem: Role
      postRequestItem: RoleRequest
      examplesJson: !include examples/Roles.json
  /{id}:
    uriParameters:
      id:
        type: integer
        example: 1
        default: 1
    type:
      Item:
        responseItem: Role
        putRequestItem: RoleRequest

/oauth:
  /token:
    post:
      body:
        application/json:
          type: AuthRequest
      responses:
        200:
          description:
            Success Auth
          body:
            application/json:
              Auth
  /logout:
    post:
      responses:
        204:
          description:
            Success logout
  /resetEmail:
    post:
      body:
        application/json:
          type: ResetEmailRequest
      responses:
        204:
          description:
            Email was sent
  /resetPassword/{hash}:
    uriParameters:
      hash:
        type: string
        example: f5f2f2ec355835af36fea2ad93ac3de6
        default: f5f2f2ec355835af36fea2ad93ac3de6
    post:
      body:
        application/json:
          type: ResetPasswordRequest
      responses:
        204:
          description:
            Success

/permission-groups:
  type:
    Collection:
      responseItem: PermissionGroup
      examplesJson: !include examples/PermissionGroups.json

/files:
  post:
    body:
      multipart/form-data:
        properties:
          file:
            description: The file to be uploaded.
            required: true
            type: file
    responses:
      201:
        description:
          Success Upload
        body:
          application/json:
            type: object
            properties:
              id: integer
            example:
              id: 1

/logs:
  type:
    PaginationCollection:
      responseItem: Log
      examplesJson: !include examples/Logs.json